* {
    margin: 0;
    padding: 0;
    box-sizing: border-box;
}

body {
    font-family: 'Inter', -apple-system, BlinkMacSystemFont, sans-serif;
    background: linear-gradient(135deg, #667eea 0%, #764ba2 100%);
    min-height: 100vh;
    color: white;
    overflow-x: hidden;
}

.container {
    max-width: 1200px;
    margin: 0 auto;
    padding: 2rem;
    min-height: 100vh;
}

/* Header Styles */
.header {
    text-align: center;
    margin-bottom: 3rem;
    animation: fadeInDown 1s ease-out;
}

.logo {
    font-size: 3rem;
    font-weight: 700;
    margin-bottom: 0.5rem;
    text-shadow: 0 4px 8px rgba(0,0,0,0.3);
}

.logo i {
    color: #ffd700;
    margin-right: 1rem;
    animation: pulse 2s infinite;
}

.tagline {
    font-size: 1.2rem;
    opacity: 0.9;
    font-weight: 300;
}

/* Main Content Layout */
.main-content {
    display: grid;
    grid-template-columns: 1fr 1fr;
    gap: 2rem;
    align-items: start;
}

/* Upload Section */
.upload-section {
    animation: slideInLeft 1s ease-out;
}

.upload-zone {
    background: rgba(255, 255, 255, 0.1);
    backdrop-filter: blur(20px);
    border: 2px dashed rgba(255, 255, 255, 0.3);
    border-radius: 20px;
    padding: 3rem;
    text-align: center;
    cursor: pointer;
    transition: all 0.3s ease;
    position: relative;
    overflow: hidden;
}

.upload-zone::before {
    content: '';
    position: absolute;
    top: -50%;
    left: -50%;
    width: 200%;
    height: 200%;
    background: linear-gradient(45deg, transparent, rgba(255,255,255,0.1), transparent);
    transform: rotate(45deg);
    transition: all 0.5s;
    opacity: 0;
}

.upload-zone:hover::before {
    animation: shimmer 1.5s ease-in-out;
}

.upload-zone:hover {
    border-color: rgba(255, 255, 255, 0.6);
    background: rgba(255, 255, 255, 0.15);
    transform: translateY(-5px);
    box-shadow: 0 20px 40px rgba(0,0,0,0.2);
}

.upload-content {
    position: relative;
    z-index: 2;
}

.upload-icon {
    font-size: 4rem;
    color: #ffd700;
    margin-bottom: 1rem;
    display: block;
    animation: bounce 2s infinite;
}

.upload-zone h3 {
    font-size: 1.5rem;
    margin-bottom: 0.5rem;
    font-weight: 600;
}

.upload-zone p {
    opacity: 0.8;
    font-size: 1rem;
}

/* Chat Section */
.chat-section {
    animation: slideInRight 1s ease-out;
}

.chat-container {
    background: rgba(255, 255, 255, 0.1);
    backdrop-filter: blur(20px);
    border-radius: 20px;
    padding: 1.5rem;
    height: 500px;
    display: flex;
    flex-direction: column;
    box-shadow: 0 8px 32px rgba(0,0,0,0.1);
    border: 1px solid rgba(255, 255, 255, 0.2);
}

.chat-messages {
    flex: 1;
    overflow-y: auto;
    padding: 1rem;
    margin-bottom: 1rem;
    border-radius: 15px;
    background: rgba(0, 0, 0, 0.1);
}

.welcome-message {
    text-align: center;
    padding: 2rem;
    opacity: 0.7;
}

.welcome-message i {
    font-size: 2rem;
    color: #ffd700;
    margin-bottom: 1rem;
    display: block;
}

.message {
    margin-bottom: 1rem;
    animation: fadeInUp 0.5s ease-out;
}

.user-message {
    background: rgba(255, 255, 255, 0.2);
    padding: 1rem 1.5rem;
    border-radius: 20px 20px 5px 20px;
    margin-left: 20%;
    margin-bottom: 0.5rem;
}

.ai-message {
    background: rgba(255, 215, 0, 0.2);
    padding: 1rem 1.5rem;
    border-radius: 20px 20px 20px 5px;
    margin-right: 20%;
    border: 1px solid rgba(255, 215, 0, 0.3);
}

.chat-input-container {
    display: flex;
    gap: 1rem;
    align-items: center;
}

#chatInput {
    flex: 1;
    padding: 1rem 1.5rem;
    border-radius: 25px;
    border: none;
    background: rgba(255, 255, 255, 0.2);
    color: white;
    font-size: 1rem;
    outline: none;
    backdrop-filter: blur(10px);
}

#chatInput::placeholder {
    color: rgba(255, 255, 255, 0.7);
}

#chatInput:focus {
    background: rgba(255, 255, 255, 0.3);
    box-shadow: 0 0 20px rgba(255, 215, 0, 0.3);
}

#sendButton {
    background: linear-gradient(45deg, #ffd700, #ffed4e);
    border: none;
    width: 50px;
    height: 50px;
    border-radius: 50%;
    color: #333;
    font-size: 1.2rem;
    cursor: pointer;
    transition: all 0.3s ease;
    display: flex;
    align-items: center;
    justify-content: center;
}

#sendButton:hover {
    transform: scale(1.1);
    box-shadow: 0 5px 15px rgba(255, 215, 0, 0.4);
}

#sendButton:active {
    transform: scale(0.95);
}




----
<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>SiteBot - AI Engineering Assistant</title>
    <link href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.0.0/css/all.min.css" rel="stylesheet">
    <style>
        * {
            margin: 0;
            padding: 0;
            box-sizing: border-box;
        }

        body {
            font-family: 'Inter', -apple-system, BlinkMacSystemFont, sans-serif;
            background: linear-gradient(135deg, #667eea 0%, #764ba2 100%);
            min-height: 100vh;
            color: white;
            overflow-x: hidden;
        }

        .container {
            max-width: 1200px;
            margin: 0 auto;
            padding: 2rem;
            min-height: 100vh;
        }

        .header {
            text-align: center;
            margin-bottom: 3rem;
        }

        .logo {
            font-size: 3rem;
            font-weight: 700;
            margin-bottom: 0.5rem;
            text-shadow: 0 4px 8px rgba(0,0,0,0.3);
        }

        .logo i {
            color: #ffd700;
            margin-right: 1rem;
        }

        .tagline {
            font-size: 1.2rem;
            opacity: 0.9;
            font-weight: 300;
        }

        .main-content {
            display: grid;
            grid-template-columns: 1fr 1fr;
            gap: 2rem;
            align-items: start;
        }

        .upload-zone {
            background: rgba(255, 255, 255, 0.1);
            backdrop-filter: blur(20px);
            border: 2px dashed rgba(255, 255, 255, 0.3);
            border-radius: 20px;
            padding: 3rem;
            text-align: center;
            cursor: pointer;
            transition: all 0.3s ease;
            position: relative;
        }

        .upload-zone:hover {
            border-color: rgba(255, 255, 255, 0.6);
            background: rgba(255, 255, 255, 0.15);
            transform: translateY(-5px);
        }

        .upload-icon {
            font-size: 4rem;
            color: #ffd700;
            margin-bottom: 1rem;
            display: block;
        }

        .chat-container {
            background: rgba(255, 255, 255, 0.1);
            backdrop-filter: blur(20px);
            border-radius: 20px;
            padding: 1.5rem;
            height: 500px;
            display: flex;
            flex-direction: column;
        }

        .chat-messages {
            flex: 1;
            overflow-y: auto;
            padding: 1rem;
            margin-bottom: 1rem;
            border-radius: 15px;
            background: rgba(0, 0, 0, 0.1);
        }

        .welcome-message {
            text-align: center;
            padding: 2rem;
            opacity: 0.7;
        }

        .welcome-message i {
            font-size: 2rem;
            color: #ffd700;
            margin-bottom: 1rem;
            display: block;
        }

        .message {
            margin-bottom: 1rem;
            animation: fadeInUp 0.5s ease-out;
        }

        .user-message {
            background: rgba(255, 255, 255, 0.2);
            padding: 1rem 1.5rem;
            border-radius: 20px 20px 5px 20px;
            margin-left: 20%;
            margin-bottom: 0.5rem;
        }

        .ai-message {
            background: rgba(255, 215, 0, 0.2);
            padding: 1rem 1.5rem;
            border-radius: 20px 20px 20px 5px;
            margin-right: 20%;
            border: 1px solid rgba(255, 215, 0, 0.3);
        }

        .chat-input-container {
            display: flex;
            gap: 1rem;
            align-items: center;
        }

        #chatInput {
            flex: 1;
            padding: 1rem 1.5rem;
            border-radius: 25px;
            border: none;
            background: rgba(255, 255, 255, 0.2);
            color: white;
            font-size: 1rem;
            outline: none;
            backdrop-filter: blur(10px);
        }

        #chatInput::placeholder {
            color: rgba(255, 255, 255, 0.7);
        }

        #chatInput:focus {
            background: rgba(255, 255, 255, 0.3);
            box-shadow: 0 0 20px rgba(255, 215, 0, 0.3);
        }

        #sendButton {
            background: linear-gradient(45deg, #ffd700, #ffed4e);
            border: none;
            width: 50px;
            height: 50px;
            border-radius: 50%;
            color: #333;
            font-size: 1.2rem;
            cursor: pointer;
            transition: all 0.3s ease;
            display: flex;
            align-items: center;
            justify-content: center;
        }

        #sendButton:hover {
            transform: scale(1.1);
            box-shadow: 0 5px 15px rgba(255, 215, 0, 0.4);
        }

        h1, h3 {
            margin-bottom: 1rem;
        }

        @keyframes fadeInUp {
            from {
                opacity: 0;
                transform: translateY(20px);
            }
            to {
                opacity: 1;
                transform: translateY(0);
            }
        }
    </style>
</head>
<body>
    <div class="container">
        <header class="header">
            <h1 class="logo">
                <i class="fas fa-robot"></i>
                SiteBot
            </h1>
            <p class="tagline">AI Engineering Assistant</p>
        </header>

        <main class="main-content">
            <section class="upload-section">
                <div class="upload-zone" id="uploadZone">
                    <div class="upload-content">
                        <i class="fas fa-cloud-upload-alt upload-icon"></i>
                        <h3>Drop your engineering documents here</h3>
                        <p>or click to browse files</p>
                        <input type="file" id="fileInput" multiple accept=".pdf,.dwg,.png,.jpg" style="display: none;">
                    </div>
                </div>
            </section>

            <section class="chat-section">
                <div class="chat-container">
                    <div class="chat-messages" id="chatMessages">
                        <div class="welcome-message">
                            <i class="fas fa-robot"></i>
                            <p>Upload your engineering documents and ask me anything!</p>
                        </div>
                    </div>
                    <div class="chat-input-container">
                        <input type="text" id="chatInput" placeholder="Ask about your documents..." />
                        <button id="sendButton">
                            <i class="fas fa-paper-plane"></i>
                        </button>
                    </div>
                </div>
            </section>
        </main>
    </div>

    <script>
        // Get DOM elements
        const uploadZone = document.getElementById('uploadZone');
        const fileInput = document.getElementById('fileInput');
        const chatInput = document.getElementById('chatInput');
        const sendButton = document.getElementById('sendButton');
        const chatMessages = document.getElementById('chatMessages');

        // File upload functionality
        uploadZone.addEventListener('click', () => {
            fileInput.click();
        });

        // Handle file selection
        fileInput.addEventListener('change', handleFiles);

        // Drag and drop functionality
        uploadZone.addEventListener('dragover', (e) => {
            e.preventDefault();
            uploadZone.style.borderColor = 'rgba(255, 255, 255, 0.8)';
        });

        uploadZone.addEventListener('dragleave', (e) => {
            e.preventDefault();
            uploadZone.style.borderColor = 'rgba(255, 255, 255, 0.3)';
        });

        uploadZone.addEventListener('drop', (e) => {
            e.preventDefault();
            uploadZone.style.borderColor = 'rgba(255, 255, 255, 0.3)';
            const files = e.dataTransfer.files;
            handleFiles({ target: { files } });
        });

        // Handle file uploads
        async function handleFiles(event) {
            const files = event.target.files;
            if (files.length === 0) return;

            // Show uploading state
            uploadZone.innerHTML = `
                <div class="upload-content">
                    <i class="fas fa-spinner fa-spin upload-icon"></i>
                    <h3>Uploading ${files.length} file(s)...</h3>
                    <p>Processing your documents</p>
                </div>
            `;

            const formData = new FormData();
            for (let file of files) {
                formData.append('files', file);
            }

            try {
                const response = await fetch('/upload', {
                    method: 'POST',
                    body: formData
                });

                const result = await response.json();

                // Show success state
                uploadZone.innerHTML = `
                    <div class="upload-content">
                        <i class="fas fa-check-circle upload-icon" style="color: #4CAF50;"></i>
                        <h3>Upload Complete!</h3>
                        <p>${result.message}</p>
                    </div>
                `;

                // Clear welcome message and enable chat
                document.querySelector('.welcome-message').innerHTML = `
                    <i class="fas fa-robot"></i>
                    <p>Your documents are ready! Ask me anything about them.</p>
                `;

            } catch (error) {
                // Show error state
                uploadZone.innerHTML = `
                    <div class="upload-content">
                        <i class="fas fa-exclamation-triangle upload-icon" style="color: #f44336;"></i>
                        <h3>Upload Failed</h3>
                        <p>Please try again</p>
                    </div>
                `;
            }
        }

        // Chat functionality
        sendButton.addEventListener('click', sendMessage);
        chatInput.addEventListener('keypress', (e) => {
            if (e.key === 'Enter') sendMessage();
        });

        async function sendMessage() {
            const message = chatInput.value.trim();
            if (!message) return;

            // Add user message to chat
            addMessage(message, 'user');
            chatInput.value = '';

            // Show thinking state
            const thinkingId = addMessage('Thinking...', 'ai', true);

            try {
                const response = await fetch('/chat', {
                    method: 'POST',
                    headers: { 'Content-Type': 'application/json' },
                    body: JSON.stringify({ message })
                });

                const result = await response.json();

                // Remove thinking message and add real response
                document.getElementById(thinkingId).remove();
                addMessage(result.response, 'ai');

            } catch (error) {
                document.getElementById(thinkingId).remove();
                addMessage('Sorry, something went wrong. Please try again.', 'ai');
            }
        }

        function addMessage(text, sender, isThinking = false) {
            const messageId = 'msg-' + Date.now();
            const messageDiv = document.createElement('div');
            messageDiv.className = `message ${sender}-message`;
            messageDiv.id = messageId;
            messageDiv.textContent = text;

            if (isThinking) {
                messageDiv.innerHTML = '<i class="fas fa-spinner fa-spin"></i> Thinking...';
            }

            chatMessages.appendChild(messageDiv);
            chatMessages.scrollTop = chatMessages.scrollHeight;

            return messageId;
        }
    </script>
</body>
</html>